test_src/expr.c: In function ‘funcdecl3’:
test_src/expr.c:424:5: warning: implicit declaration of function ‘fd3_func’; did you mean ‘void_func’? [-Wimplicit-function-declaration]
     fd3_func(); //未定義の関数
     ^~~~~~~~
     void_func
test_src/expr.c: At top level:
test_src/expr.c:453:34: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
 static int (*fp2_fp)(long, long)=&fp2_add;
                                  ^
test_src/expr.c: In function ‘array2’:
test_src/expr.c:625:5: warning: braces around scalar initializer
     int b[4]={1,2,{3,99},a[3]};
     ^~~
test_src/expr.c:625:5: note: (near initialization for ‘b[2]’)
test_src/expr.c:625:22: warning: excess elements in scalar initializer
     int b[4]={1,2,{3,99},a[3]};
                      ^~
test_src/expr.c:625:22: note: (near initialization for ‘b[2]’)
test_src/expr.c: In function ‘array2b’:
test_src/expr.c:635:5: warning: braces around scalar initializer
     _Bool b[4]={1,2,{3,99},a[3]};
     ^~~~~
test_src/expr.c:635:5: note: (near initialization for ‘b[2]’)
test_src/expr.c:635:24: warning: excess elements in scalar initializer
     _Bool b[4]={1,2,{3,99},a[3]};
                        ^~
test_src/expr.c:635:24: note: (near initialization for ‘b[2]’)
test_src/expr.c: In function ‘array2c’:
test_src/expr.c:644:5: warning: braces around scalar initializer
     char b[4]={1,2,{3,99},a[3]};
     ^~~~
test_src/expr.c:644:5: note: (near initialization for ‘b[2]’)
test_src/expr.c:644:23: warning: excess elements in scalar initializer
     char b[4]={1,2,{3,99},a[3]};
                       ^~
test_src/expr.c:644:23: note: (near initialization for ‘b[2]’)
test_src/expr.c: In function ‘array2s’:
test_src/expr.c:656:5: warning: braces around scalar initializer
     short b[4]={1,2,{3,99},a[3]};
     ^~~~~
test_src/expr.c:656:5: note: (near initialization for ‘b[2]’)
test_src/expr.c:656:24: warning: excess elements in scalar initializer
     short b[4]={1,2,{3,99},a[3]};
                        ^~
test_src/expr.c:656:24: note: (near initialization for ‘b[2]’)
test_src/expr.c: In function ‘array2l’:
test_src/expr.c:663:5: warning: braces around scalar initializer
     long b[4]={1,2,{3,99},a[3]};
     ^~~~
test_src/expr.c:663:5: note: (near initialization for ‘b[2]’)
test_src/expr.c:663:23: warning: excess elements in scalar initializer
     long b[4]={1,2,{3,99},a[3]};
                       ^~
test_src/expr.c:663:23: note: (near initialization for ‘b[2]’)
test_src/expr.c: In function ‘array3b’:
test_src/expr.c:678:23: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
     _Bool a[4][5], *p=(char*)a, b[4][5][6], *q=(char*)b;
                       ^
test_src/expr.c:678:48: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
     _Bool a[4][5], *p=(char*)a, b[4][5][6], *q=(char*)b;
                                                ^
test_src/expr.c: At top level:
test_src/expr.c:728:1: warning: braces around scalar initializer
 static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
 ^~~~~~
test_src/expr.c:728:1: note: (near initialization for ‘ga2_b[2]’)
test_src/expr.c:728:29: warning: excess elements in scalar initializer
 static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                             ^~
test_src/expr.c:728:29: note: (near initialization for ‘ga2_b[2]’)
test_src/expr.c:728:44: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
 static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                            ^
test_src/expr.c:733:1: warning: braces around scalar initializer
 static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
 ^~~~~~
test_src/expr.c:733:1: note: (near initialization for ‘ga2c_b[2]’)
test_src/expr.c:733:31: warning: excess elements in scalar initializer
 static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                               ^~
test_src/expr.c:733:31: note: (near initialization for ‘ga2c_b[2]’)
test_src/expr.c:733:47: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
 static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                               ^
test_src/expr.c: In function ‘sarray2’:
test_src/expr.c:741:5: warning: braces around scalar initializer
     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
     ^~~~~~
test_src/expr.c:741:5: note: (near initialization for ‘a[2]’)
test_src/expr.c:741:29: warning: excess elements in scalar initializer
     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                             ^~
test_src/expr.c:741:29: note: (near initialization for ‘a[2]’)
test_src/expr.c: In function ‘sarray2c’:
test_src/expr.c:745:5: warning: braces around scalar initializer
     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
     ^~~~~~
test_src/expr.c:745:5: note: (near initialization for ‘a[2]’)
test_src/expr.c:745:30: warning: excess elements in scalar initializer
     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                              ^~
test_src/expr.c:745:30: note: (near initialization for ‘a[2]’)
test_src/expr.c: In function ‘string1’:
test_src/expr.c:833:20: warning: initializer-string for array of chars is too long
     char str3[4] = "ABCDE"; //長すぎる
                    ^~~~~~~
test_src/expr.c: At top level:
test_src/expr.c:852:27: warning: initializer-string for array of chars is too long
 GLOBAL char sg1_str3[4] = "ABCDE"; //長すぎる
                           ^~~~~~~
test_src/expr.c: In function ‘string1s’:
test_src/expr.c:879:27: warning: initializer-string for array of chars is too long
     static char str3[4] = "ABCDE"; //長すぎる
                           ^~~~~~~
test_src/expr.c: In function ‘chara1’:
test_src/expr.c:893:34: warning: hex escape sequence out of range
     char h0='\x0', h1='\xFF', h2='\xffff';
                                  ^~~~~~~~
test_src/expr.c: At top level:
test_src/expr.c:1001:54: warning: excess elements in array initializer
 GLOBAL char i2g_c, *i2g_ac[3] = {0,&i2g_c+1,(char*)3,(char*)4};    //初期値多い
                                                      ^
test_src/expr.c:1001:54: note: (near initialization for ‘i2g_ac’)
test_src/expr.c: In function ‘scope4’:
test_src/expr.c:1278:14: warning: passing argument 1 of ‘gc4_func’ from incompatible pointer type [-Wincompatible-pointer-types]
     gc4_func(&a);
              ^
test_src/expr.c:1266:10: note: expected ‘struct LS *’ but argument is of type ‘struct LS *’
     void gc4_func(struct LS*p){};
          ^~~~~~~~
test_src/expr.c: In function ‘enum1e’:
test_src/expr.c:1619:22: warning: empty declaration with storage class specifier does not redeclare tag
         typedef enum ABC;
                      ^~~
  OK: addsub1
  OK: addsub1b
  OK: addsub1c
  OK: addsub1s
  OK: addsub1l
  OK: addsub1ll
  OK: addsub_mix1
  OK: addsub_mix2
  OK: addsub
  OK: assign1
  OK: assign1b
  OK: assign1l
  OK: assign
  OK: eq_rel1
  OK: eq_rel2
  OK: eq_rel
  OK: while1
  OK: do1
  OK: for1
  OK: tri_cond
  OK: goto1
  OK: iterate
  OK: if1
  OK: case1
  OK: selection
  OK: inc
  OK: inc_bool
  OK: inc_char
  OK: inc_short
  OK: inc_long
  OK: dec
  OK: dec_bool
  OK: dec_char
  OK: dec_short
  OK: dec_long
  OK: incdec
  OK: funcdecl1
  OK: funcdecl2
  OK: funcdecl3
  OK: funcp1
  OK: funcp2
  OK: funcp3
  OK: funcp4
  OK: funcp5
  OK: func
  OK: pointer1
  OK: pointer1g
  OK: pointer2
  OK: pointer2g
  OK: pointer4
  OK: pointer5
  OK: pointer6
  OK: pointer7
  OK: pointer
  OK: array1
  OK: array1b
  OK: array1c
  OK: array1s
  OK: array1l
  OK: array2
  OK: array2b
  OK: array2c
  OK: array2s
  OK: array2l
  OK: array3
  OK: array3b
  OK: array3c
  OK: array3s
  OK: array3l
  OK: array4
  OK: array4c
  OK: garray2
  OK: garray2c
  OK: garray4
  OK: garray4c
  OK: sarray2
  OK: sarray2c
  OK: sarray4
  OK: sarray4c
  OK: array
  OK: string1
  OK: string1g
  OK: string1s
  OK: chara1
  OK: func_name
  OK: string
  OK: integer
  OK: init1
  OK: init1s
  OK: init1g
  OK: init1sg
  OK: init2g
  OK: init3g
  OK: init
  OK: align1
  OK: align1g
  OK: align
  OK: size_of1
  OK: size_of1b
  OK: size_of1c
  OK: size_of1s
  OK: size_of1l
  OK: size_of1ll
  OK: size_of1v
  OK: size_of1C
  OK: size_of2
  OK: size_of
  OK: type_of
  OK: scope1
  OK: scope2
  OK: scope3
  OK: scope4
  OK: scope
  OK: overflow1
  OK: overflow1b
  OK: overflow1c
  OK: overflow1s
  OK: overflow1l
  OK: overflow1ll
  OK: overflow2
  OK: overflow
  OK: integer_def
  OK: extern1
  OK: extern2
  OK: extern3
  OK: static1
  OK: static2
  OK: static3
  OK: auto1
  OK: const1
  OK: ext
  OK: declarate
  OK: cast
  OK: enum1
  OK: enum1e
  OK: enum1g
  OK: Enum
  OK: Struct1
  OK: Struct
  OK: Union1
  OK: Union
  OK: typedef1
  OK: typedef1p
  OK: typedef1a
  OK: typedef1b
  OK: typedef1c
  OK: typedef3
  OK: Typedef
  OK: Assert
