9cc:Warning: tmp/test_src.c:32: static int f42() {42; ;;;;;}
                                                            ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:227: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:373: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:378: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:429:     fd3_func();
                                     ^ 未宣言の関数コールです。
9cc:Warning: tmp/test_src.c:535:     return 0;
                                     ^ static int**型の関数pointer3がint型を返しています
9cc:Warning: tmp/test_src.c:875:         memcmp(str5, str6, sizeof(str5))==0;
                                         ^ 未宣言の関数コールです。
9cc:Warning: tmp/test_src.c:1221: }
                                   ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:756: static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                                           ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:756: static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                                             ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:761: static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                                             ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:761: static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                                               ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:881:  char sg1_str3[4] = "ABCDE";
                                                          ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:882:  char sg1_str4[3] = "A\0B";
                                                         ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:1030:  char i2g_c, *i2g_ac[3] = {0,&i2g_c+1,(char*)3,(char*)4};
                                                                                 ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:769:     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                           ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:769:     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                             ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:773:     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                            ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:773:     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                              ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:908:     static char str3[4] = "ABCDE";
                                                                ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:622:     int b[4]={1,2,{3,99},a[3]};
                                                    ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:622:     int b[4]={1,2,{3,99},a[3]};
                                                      ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:640:     _Bool b[4]={1,2,{3,99},a[3]};
                                                      ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:640:     _Bool b[4]={1,2,{3,99},a[3]};
                                                        ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:651:     char b[4]={1,2,{3,99},a[3]};
                                                     ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:651:     char b[4]={1,2,{3,99},a[3]};
                                                       ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:671:     short b[4]={1,2,{3,99},a[3]};
                                                      ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:671:     short b[4]={1,2,{3,99},a[3]};
                                                        ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:678:     long b[4]={1,2,{3,99},a[3]};
                                                     ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:678:     long b[4]={1,2,{3,99},a[3]};
                                                       ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:862:     char str3[4] = "ABCDE";
                                                         ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:863:     char str4[3] = "A\0B";
                                                        ^ 初期化リストが配列サイズを超えています
# == gen_struct_init_local ==
# top=:Node[0xd72b60]:type=ND_ASSIGN, name="", tp=struct ST, offset=0, index=0, val=0, unused=0
#   lhs=:Node[0xd72bd0]:type=ND_LOCAL_VAR, name="st", tp=struct ST, offset=56, index=0, val=0, unused=0
#   rhs=:Node[0xd72240]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#     lst[0]:Node[0xd72390]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=2, unused=0
#     lst[1]:Node[0xd72430]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=2, unused=0
#     lst[2]:Node[0xd724d0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=3, unused=0
#     lst[3]:Node[0xd72570]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=4, unused=0
#     lst[4]:Node[0xd72610]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=5, unused=0
#     lst[5]:Node[0xd726b0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=6, unused=0
#     lst[6]:Node[0xd72720]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#       lst[0]:Node[0xd72870]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=10, unused=0
#       lst[1]:Node[0xd72910]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=11, unused=0
#     lst[7]:Node[0xd729b0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=20, unused=0
#     lst[8]:Node[0xd72a50]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=21, unused=0
#     lst[9]:Node[0xd72af0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=22, unused=0
# == elm ==
# top=:Node[0xd71f30]:type=ND_MEMBER_DEF, name="x", tp=struct XYZ, offset=24, index=0, val=0, unused=0
# == val_node ==
# top=:Node[0xd72720]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#   lst[0]:Node[0xd72870]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=10, unused=0
#   lst[1]:Node[0xd72910]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=11, unused=0
# == gen_struct_init_local ==
# top=:Node[0xd733d0]:type=ND_ASSIGN, name="", tp=struct XYZ, offset=0, index=0, val=0, unused=0
#   lhs=:Node[0xd73440]:type=ND_LOCAL_VAR, name="xyz", tp=struct XYZ, offset=68, index=0, val=0, unused=0
#   rhs=:Node[0xd72cb0]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#     lst[0]:Node[0xd72dd0]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#       lst[0]:Node[0xd72f20]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=1, unused=0
#       lst[1]:Node[0xd72fc0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=2, unused=0
#       lst[2]:Node[0xd73060]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=3, unused=0
#     lst[1]:Node[0xd73100]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=4, unused=0
#     lst[2]:Node[0xd73170]:type=ND_INIT_LIST, name="", tp=int, offset=0, index=0, val=0, unused=0
#       lst[0]:Node[0xd732c0]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=5, unused=0
#       lst[1]:Node[0xd73360]:type=ND_NUM, name="", tp=int, offset=0, index=0, val=6, unused=0
  OK: addsub1
  OK: addsub1b
  OK: addsub1c
  OK: addsub1s
  OK: addsub1l
  OK: addsub1ll
  OK: addsub_mix1
  OK: addsub_mix2
  OK: addsub
  OK: assign1
  OK: assign1b
  OK: assign1l
  OK: assign
  OK: eq_rel1
  OK: eq_rel2
  OK: eq_rel
  OK: while1
  OK: do1
  OK: for1
  OK: tri_cond
  OK: goto1
  OK: iterate
  OK: if1
  OK: case1
  OK: selection
  OK: inc
  OK: inc_bool
  OK: inc_char
  OK: inc_short
  OK: inc_long
  OK: dec
  OK: dec_bool
  OK: dec_char
  OK: dec_short
  OK: dec_long
  OK: incdec
  OK: funcdecl1
  OK: funcdecl2
  OK: funcdecl3
  OK: funcp1
  OK: funcp2
  OK: funcp3
  OK: funcp4
  OK: funcp5
  OK: func
  OK: pointer1
  OK: pointer1g
  OK: pointer2
  OK: pointer2g
  OK: pointer4
  OK: pointer5
  OK: pointer6
  OK: pointer7
  OK: pointer
  OK: array1
  OK: array1b
  OK: array1c
  OK: array1s
  OK: array1l
  OK: array2
  OK: array2b
  OK: array2c
  OK: array2s
  OK: array2l
  OK: array3
  OK: array3b
  OK: array3c
  OK: array3s
  OK: array3l
  OK: array4
  OK: array4c
  OK: array5
  OK: garray2
  OK: garray2c
  OK: garray4
  OK: garray4c
  OK: sarray2
  OK: sarray2c
  OK: sarray4
  OK: sarray4c
  OK: array
  OK: string1
  OK: string1g
  OK: string1s
  OK: chara1
  OK: func_name
  OK: string
  OK: integer
  OK: init1
  OK: init1s
  OK: init1g
  OK: init1sg
  OK: init2g
  OK: init3g
  OK: init
  OK: align1
  OK: align1g
  OK: align
  OK: size_of1
  OK: size_of1b
  OK: size_of1c
  OK: size_of1s
  OK: size_of1l
  OK: size_of1ll
  OK: size_of1v
  OK: size_of1C
  OK: size_of2
  OK: size_of
  OK: type_of
  OK: scope1
  OK: scope2
  OK: scope3
  OK: scope4
  OK: scope
  OK: overflow1
  OK: overflow1b
  OK: overflow1c
  OK: overflow1s
  OK: overflow1l
  OK: overflow1ll
  OK: overflow2
  OK: overflow
  OK: integer_def
  OK: extern1
  OK: extern2
  OK: extern3
  OK: static1
  OK: static2
  OK: static3
  OK: auto1
  OK: const1
  OK: ext
  OK: declarate
  OK: cast
  OK: enum1
  OK: enum1e
  OK: enum1g
  OK: Enum
  OK: Struct1
xyz.y=4
xyz.z=5
  OK: Struct2
  OK: Struct
  OK: Union1
  OK: Union
  OK: typedef1
  OK: typedef1p
  OK: typedef1a
  OK: typedef1b
  OK: typedef1c
  OK: typedef3
  OK: Typedef
  OK: Assert
