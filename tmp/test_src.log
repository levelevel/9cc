9cc:Warning: tmp/test_src.c:26: static int f42() {42; ;;;;;}
                                                            ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:41: }
                                 ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:274: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:420: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:425: }
                                  ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:476:     fd3_func();
                                     ^ 未宣言の関数コールです。
9cc:Warning: tmp/test_src.c:865: static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                                                     ^ =の左右の型(static int*:int[4]*)が異なります
9cc:Warning: tmp/test_src.c:870: static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                                                       ^ =の左右の型(static char*:char[4]*)が異なります
9cc:Warning: tmp/test_src.c:1141:  int i2g_x, *i2g_p = 2 + &i2g_x - 1;
                                              ^ =の左右の型(int*:int)が異なります
9cc:Warning: tmp/test_src.c:1358: }
                                   ^ 関数が戻り値を返していません
9cc:Warning: tmp/test_src.c:1446:     gc4_func(&a);
                                               ^ 引数[0]の型(struct LS*:struct LS*)が一致しません
9cc:Note: tmp/test_src.c:1434:     void gc4_func(struct LS*p){};
                                                            ^ 関数の定義はここです
9cc:Warning: tmp/test_src.c:2712:     return str;
                                      ^ static char*型の関数func_const2がstatic const char[4]型を返しています
9cc:Warning: tmp/test_src.c:2721:     func_const3(p1);
                                                  ^ 引数[0]の型(char*:const char*)が一致しません
9cc:Note: tmp/test_src.c:2714: static char *func_const3(char*str){return str;}
                                                                ^ 関数の定義はここです
9cc:Warning: tmp/test_src.c:2734:     func_const3(p3);
                                                  ^ 引数[0]の型(char*:char const*)が一致しません
9cc:Note: tmp/test_src.c:2714: static char *func_const3(char*str){return str;}
                                                                ^ 関数の定義はここです
9cc:Warning: tmp/test_src.c:865: static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                                           ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:865: static int ga2_b[4]={1,2,{3,99},4}, *ga2_p=&ga2_a, *ga2_q=&ga2_b[2], *ga2_r=ga2_a+3;
                                                             ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:870: static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                                             ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:870: static char ga2c_b[4]={1,2,{3,99},4}, *ga2c_p=&ga2c_a, *ga2c_q=&ga2c_b[2], *ga2c_r=ga2c_a+3;
                                                               ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:993:  char sg1_str3[4] = "ABCDE";
                                                          ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:994:  char sg1_str4[3] = "A\0B";
                                                         ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:1142:  char i2g_c, *i2g_ac[3] = {0,&i2g_c+1,(char*)3,(char*)4};
                                                                                 ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:2328:     static gs2a_XYZ gs2a_xyz = {{1,2,3},4,{5,6}};
                                                                   ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:2328:     static gs2a_XYZ gs2a_xyz = {{1,2,3},4,{5,6}};
                                                                             ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:878:     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                           ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:878:     static int a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                             ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:882:     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                            ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:882:     static char a[4]={1,2,{3,99},4}, *p=a, *q=&a[2], *r=a+3;
                                                              ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:1020:     static char str3[4] = "ABCDE";
                                                                 ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:2170:     static XYZ xyz = {{1,2,3},4,{5,6}};
                                                         ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:2170:     static XYZ xyz = {{1,2,3},4,{5,6}};
                                                                   ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:2209:     static XYZ xyz = {{1,2,3},4,{5,6}};
                                                         ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:2209:     static XYZ xyz = {{1,2,3},4,{5,6}};
                                                                   ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:671:     int b[4]={1,2,{3,99},a[3]};
                                                    ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:671:     int b[4]={1,2,{3,99},a[3]};
                                                      ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:689:     _Bool b[4]={1,2,{3,99},a[3]};
                                                      ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:689:     _Bool b[4]={1,2,{3,99},a[3]};
                                                        ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:700:     char b[4]={1,2,{3,99},a[3]};
                                                     ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:700:     char b[4]={1,2,{3,99},a[3]};
                                                       ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:720:     short b[4]={1,2,{3,99},a[3]};
                                                      ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:720:     short b[4]={1,2,{3,99},a[3]};
                                                        ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:727:     long b[4]={1,2,{3,99},a[3]};
                                                     ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:727:     long b[4]={1,2,{3,99},a[3]};
                                                       ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:974:     char str3[4] = "ABCDE";
                                                         ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:975:     char str4[3] = "A\0B";
                                                        ^ 初期化リストが配列サイズを超えています
9cc:Warning: tmp/test_src.c:1945:     XYZ xyz = {{1,2,3},4,{5,6}};
                                                  ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:1945:     XYZ xyz = {{1,2,3},4,{5,6}};
                                                            ^ スカラーがリストで初期化されています
9cc:Warning: tmp/test_src.c:2518:     } u10 = {1,2}, u1=u10;
                                                 ^ 構造体・共用体の初期化リストが要素数を超えています
9cc:Warning: tmp/test_src.c:2536:     } u10 = {1,2}, u1, *u1p=&u1;
                                                 ^ 構造体・共用体の初期化リストが要素数を超えています
  OK: logical1
  OK: logical2
  OK: logical
  OK: addsub1
  OK: addsub1b
  OK: addsub1c
  OK: addsub1s
  OK: addsub1l
  OK: addsub1ll
  OK: addsub_mix1
  OK: addsub_mix2
  OK: CompoundAssign
  OK: CompoundAssignC
  OK: addsub
  OK: assign1
  OK: assign1b
  OK: assign1l
  OK: assign
  OK: eq_rel1
  OK: eq_rel2
  OK: eq_rel
  OK: while1
  OK: do1
  OK: for1
  OK: tri_cond
  OK: goto1
  OK: iterate
  OK: if1
  OK: case1
  OK: selection
  OK: inc
  OK: inc_bool
  OK: inc_char
  OK: inc_short
  OK: inc_long
  OK: dec
  OK: dec_bool
  OK: dec_char
  OK: dec_short
  OK: dec_long
  OK: incdec
  OK: funcdecl1
  OK: funcdecl2
  OK: funcdecl3
  OK: funcp1
  OK: funcp2
  OK: funcp3
  OK: funcp4
  OK: funcp5
  OK: func
  OK: pointer1
  OK: pointer1g
  OK: pointer2
  OK: pointer2g
  OK: pointer4
  OK: pointer5
  OK: pointer6
  OK: pointer7
  OK: pointer
  OK: array1
  OK: array1b
  OK: array1c
  OK: array1s
  OK: array1l
  OK: array2
  OK: array2b
  OK: array2c
  OK: array2s
  OK: array2l
  OK: array3
  OK: array3b
  OK: array3c
  OK: array3s
  OK: array3l
  OK: array4
  OK: array4c
  OK: array5
  OK: array6
  OK: garray2
  OK: garray2c
  OK: garray4
  OK: garray4c
  OK: garray6
  OK: sarray2
  OK: sarray2c
  OK: sarray4
  OK: sarray4c
  OK: sarray6
  OK: array
  OK: string1
  OK: string1g
  OK: string1s
  OK: chara1
  OK: func_name
  OK: string
  OK: integer
  OK: init1
  OK: init1s
  OK: init1g
  OK: init1sg
  OK: init2g
  OK: init3g
  OK: init
  OK: align1
  OK: align1g
  OK: align
  OK: size_of1
  OK: size_of1b
  OK: size_of1c
  OK: size_of1s
  OK: size_of1l
  OK: size_of1ll
  OK: size_of1v
  OK: size_of1C
  OK: align_of
  OK: size_of
  OK: type_of
  OK: scope1
  OK: scope2
  OK: scope3
  OK: scope4
  OK: scope5
  OK: scope
  OK: overflow1
  OK: overflow1b
  OK: overflow1c
  OK: overflow1s
  OK: overflow1l
  OK: overflow1ll
  OK: overflow2
  OK: overflow
  OK: integer_def
  OK: extern1
  OK: extern2
  OK: extern3
  OK: extern4
  OK: static1
  OK: static2
  OK: static3
  OK: auto1
  OK: const1
  OK: ext
  OK: declarate
  OK: cast
  OK: enum1
  OK: enum1e
  OK: enum1g
  OK: Enum
  OK: Struct1
  OK: Struct1Arrow
  OK: Struct2
  OK: Struct2Arrow
  OK: Struct3
  OK: Struct4
  OK: Struct4Arrow
  OK: StaticStruct1
  OK: StaticStruct1Arrow
  OK: StaticStruct2
  OK: StaticStruct2Arrow
  OK: StaticStruct3
  OK: StaticStruct4
  OK: GlobalStruct1
  OK: GlobalStruct2Arrow
  OK: GlobalStruct3
  OK: AnonymouseStruct1
  OK: AnonymouseStruct2
  OK: Struct
  OK: Union1
  OK: Union1Arrow
  OK: Union2
  OK: Union2Arrow
  OK: StaticUnion1
  OK: AnonymouseUnion1
  OK: AnonymouseUnion2
  OK: Union
  OK: typedef1
  OK: typedef1p
  OK: typedef1a
  OK: typedef1b
  OK: typedef1c
  OK: typedef3
  OK: Typedef
  OK: Assert
  OK: Const
  OK: Ignore
